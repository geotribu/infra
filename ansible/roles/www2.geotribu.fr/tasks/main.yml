---
# Installe Git
- name: Ajoute le dépôt de Git
  ansible.builtin.apt_repository:
    repo: ppa:git-core/ppa
  become: true

- name: Installe les paquets de base
  become: true
  ansible.builtin.apt:
    name:
      - git
      # Dépendances optionnelles pour Material for Mkdocs (plugin social : https://squidfunk.github.io/mkdocs-material/setup/setting-up-social-cards/).
      # souci avec la dépendance de libfreetype6-dev à brotli (https://forum.ubuntu-nl.org/index.php?topic=110687.0)
      - libbrotli1
      - libffi-dev
      - libfreetype6-dev
      - libjpeg-dev
      - libpng-dev
      - libz-dev
      - libcairo2-dev
      - pngquant
    state: present
    update_cache: true

# Configuration profil utilisateur pour Mkdocs
- name: Ajoute les variables d'environnement liées à Mkdocs au profil bash de l'utilisateur geotribu
  ansible.builtin.blockinfile:
    backup: true
    create: true
    path: /home/geotribu/.profile
    mode: "0644"
    block: |
      export MKDOCS_ENABLE_PLUGIN_GIT_AUTHORS=true
      export MKDOCS_ENABLE_PLUGIN_GIT_COMMITTERS=true
      export MKDOCS_ENABLE_PLUGIN_GIT_DATES=true
      export MKDOCS_ENABLE_PLUGIN_PRIVACY=true
      export MKDOCS_ENABLE_PLUGIN_SOCIAL=true
      export MKDOCS_ENABLE_PLUGIN_SOCIAL_CARDS=true
      export MKDOCS_ENABLE_PLUGIN_RSS=true
      export MKDOCS_ENABLE_PLUGIN_TAGS=true
      export MKDOCS_ENABLE_PLUGIN_TYPESET=true
      export MKDOCS_PLUGIN_GIT_COMMITTERS_CACHE_DIR={{ dir_website_cache }}plugins/git-committers
      export MKDOCS_PLUGIN_PRIVACY_EXTERNAL_CACHE_DIR={{ dir_website_cache }}plugins/privacy
      export MKDOCS_PLUGIN_RSS_CACHE_DIR={{ dir_website_cache }}plugins/rss
      export MKDOCS_PLUGIN_SOCIAL_CACHE_DIR={{ dir_website_cache }}plugins/social
      export MKDOCS_SITE_COPYRIGHT='<span class=\"copyleft\">&copy;</span> Geotribu (miroir)'
      export MKDOCS_SITE_URL=https://www2.geotribu.fr/
  become: true
  become_user: geotribu

# Dossier cible pour le projet Git
- name: Crée le dossier de destination pour les sources du site
  ansible.builtin.file:
    path: "{{ dir_website_source }}"
    state: directory
    recurse: true
    owner: geotribu
    group: www-data
    mode: "0755"
  become: true

# Dossier cible pour le HTML
- name: Crée le dossier de destination pour la sauvegarde du site HTML
  ansible.builtin.file:
    path: "{{ dir_website_html }}"
    state: directory
    recurse: true
    owner: geotribu
    group: www-data
  become: true

# Clone initial du site
- name: Clone le dépôt des sources du site Geotribu
  ansible.builtin.git:
    repo: https://github.com/geotribu/website.git
    dest: "{{ dir_website_source }}"
    depth: 1
    force: true
    single_branch: true
    update: true
    version: master
  become_user: geotribu
  become: true

- name: Vérifie la présence du dépôt Git
  ansible.builtin.stat:
    path: "{{ dir_website_source }}/.git"
  register: website_git_repo

- name: Configure le dépôt local - nom d'utilisateur
  community.general.git_config:
    scope: local
    repo: "{{ dir_website_source }}"
    name: user.name
    value: Geotribu
  become: true
  become_user: geotribu

- name: Configure le dépôt local - email
  community.general.git_config:
    scope: local
    repo: "{{ dir_website_source }}"
    name: user.email
    value: geotribu@gmail.com
  become: true
  become_user: geotribu

- name: Installe les paquets Python de base dans virtualenv
  ansible.builtin.pip:
    name:
      - pip
      - setuptools
      - wheel
    virtualenv: "{{ [dir_website_git, '.venv'] | path_join }}"
    virtualenv_command: /usr/bin/python3 -m venv
    state: present
    chdir: "{{ dir_website_git }}"
  become: true
  become_user: geotribu

- name: Installe les paquets Python pour générer le site principal
  ansible.builtin.pip:
    chdir: "{{ dir_website_source }}"
    requirements: requirements-free.txt
    virtualenv: "{{ dir_website_git }}.venv"
  become: true
  become_user: geotribu

# Génère le site
- name: Génère le site
  ansible.builtin.shell: >-
    source .venv/bin/activate &&
    git restore . &&
    python scripts/100_mkdocs_config_merger.py -c mkdocs-free.yml &&
    mkdocs build --config-file mkdocs-free.yml --site-dir {{ dir_website_html }}
  args:
    chdir: "{{ dir_website_git }}"
    executable: /bin/bash
  become: true
  become_user: geotribu
  changed_when: true

- name: Planifie l'exécution quotidienne de la mise à jour du dépôt
  ansible.builtin.cron:
    backup: true
    name: MAJ quotidienne du site miroir
    job: >
      . $HOME/.profile ;
      git -C {{ dir_website_git }} restore . &&
      git -C {{ dir_website_git }} pull --force --prune --rebase &&
      cd {{ dir_website_git }} &&
      {{ dir_website_git }}.venv/bin/python scripts/100_mkdocs_config_merger.py -c mkdocs-free.yml &&
      {{ dir_website_git }}.venv/bin/python -m mkdocs build --config-file mkdocs-free.yml --site-dir {{ dir_website_html }}
      echo -e "User-Agent: *\nDisallow: /\nSitemap: https://www2.geotribu.fr/sitemap.xml" > {{ dir_website_html }}robots.txt
    special_time: daily
    user: geotribu
  become: true
  become_user: geotribu

# Site Apache
- name: Copie la configuration Apache2 du CDN
  ansible.builtin.template:
    src: templates/apache_www.conf.j2
    dest: /etc/apache2/sites-available/{{ geotribu_www }}-{{ website_mirror_subdomain }}.conf
    mode: preserve
  become: true

- name: Active le site
  become: true
  ansible.builtin.command: /usr/sbin/a2ensite {{ geotribu_www }}-{{ website_mirror_subdomain }}
  changed_when: true
  notify: Restart Apache

- name: Crée un certificat SSL avec Let's Encrypt (prod) pour {{ website_mirror_subdomain }}
  ansible.builtin.command: >-
    certbot --apache
    --noninteractive
    -d {{ website_mirror_subdomain }}.{{ hostname }}
    --email {{ geotribu_cert_mail }}
    --agree-tos
  become: true
  register: cert_created
  notify: Reload Apache
  changed_when: true
  when: letsencrypt_enabled | default(false)

- name: Certificat autosigné - Génère une clé privée si elle n’existe pas déjà
  community.crypto.openssl_privatekey:
    path: /etc/ssl/private/{{ website_mirror_subdomain }}.key
    size: 4096
    type: RSA
  become: true
  when: not letsencrypt_enabled | default(false)

- name: Certificat autosigné - certificate signing request (CSR) for self-signed certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: /etc/ssl/private/{{ website_mirror_subdomain }}.key
    common_name: cdn_geotribu_local
    organization_name: Geotribu
    subject_alt_name:
      - "DNS:{{ hostname }}"
      - "DNS:{{ website_mirror_subdomain }}.{{ hostname }}"
  become: true
  register: csr
  when: not letsencrypt_enabled | default(false)

- name: Certificat auto-signé - Génère le certificat pour {{ website_mirror_subdomain }}
  community.crypto.x509_certificate:
    csr_content: "{{ csr.csr }}"
    path: "/etc/ssl/certs/{{ website_mirror_subdomain }}.crt"
    privatekey_path: /etc/ssl/private/{{ website_mirror_subdomain }}.key
    provider: selfsigned
  become: true
  when: not letsencrypt_enabled | default(false)
