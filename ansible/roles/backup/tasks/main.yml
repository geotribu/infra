---
# Installe le CLI GitHub
- name: Ajoute le dépôt de Git
  ansible.builtin.apt_repository:
    repo: "ppa:git-core/ppa"
    state: present
  become: true

- name: Installe les paquets de base
  become: true
  ansible.builtin.apt:
    name:
      - git
      - wget
    state: present
    update_cache: true

- name: Check si le dépôt est déjà présent
  ansible.builtin.stat:
    path: "/etc/apt/sources.list.d/github-cli.list"
  become: true
  register: gh_ppa

- name: Télécharge la clé GPG GitHub CLI
  ansible.builtin.get_url:
    url: https://cli.github.com/packages/githubcli-archive-keyring.gpg
    dest: /usr/share/keyrings/githubcli-archive-keyring.gpg
    mode: "0644"
  become: true
  when: not gh_ppa.stat.exists

- name: Ajoute le dépôt GitHub CLI dans apt sources
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main"
    filename: github-cli
    state: present
  become: true
  when: not gh_ppa.stat.exists

- name: Installe le CLI GitHub
  ansible.builtin.apt:
    name:
      - gh
    state: present
    update_cache: true
  become: true

- name: MAJ les paquets installés
  become: true
  ansible.builtin.apt:
    update_cache: true
    upgrade: true

#  Script de sauvegarde
- name: "Crée le dossier de destination des sauvegarde {{ dir_dest_backups }}"
  ansible.builtin.file:
    path: "{{ dir_dest_backups }}cdn"
    state: directory
    owner: geotribu
    group: geotribu
    mode: "0755"
  become_user: geotribu
  become: true

- name: "Crée le dossier du script de sauvegarde CDN {{ dir_backup_scripts }}"
  ansible.builtin.file:
    path: "{{ dir_backup_scripts }}"
    state: directory
    owner: geotribu
    group: geotribu
    mode: "0755"
  become_user: geotribu
  become: true

- name: "Copie le script de sauvegarde du site + CDN dans {{ dir_backup_scripts }}"
  ansible.builtin.template:
    src: "templates/geotribu-backup-site-cdn.sh.j2"
    dest: "{{ dir_backup_scripts }}geotribu-backup-site-cdn.sh"
    mode: "0775"
    backup: true
  become_user: geotribu
  become: true

- name: "Copie le fichier modèle de notification dans {{ dir_backup_scripts }}"
  ansible.builtin.copy:
    src: "files/tpl_slack_webhook_backup.json"
    dest: "{{ dir_backup_scripts }}"
    owner: geotribu
    group: geotribu
    # mode: "0775"
    mode: preserve
    backup: true
  become_user: geotribu
  become: true

# Cible de la sauvegarde
- name: Crée le dossier de destination pour la sauvegarde des sources du site
  ansible.builtin.file:
    path: "{{ dir_website_source }}"
    state: directory
    recurse: true
    owner: geotribu
    group: www-data
    mode: "0755"
  become: true

- name: Clone le dépôt des sources du site Geotribu
  ansible.builtin.git:
    repo: https://github.com/geotribu/website.git
    dest: "{{ dir_website_source }}"
    depth: 1
    single_branch: true
    version: master
  become_user: geotribu
  become: true

- name: Configure le dépôt local - nom d'utilisateur
  community.general.git_config:
    scope: local
    repo: "{{ dir_website_source }}"
    name: user.name
    value: Geotribu

- name: Configure le dépôt local - email
  community.general.git_config:
    scope: local
    repo: "{{ dir_website_source }}"
    name: user.email
    value: geotribu@gmail.com

- name: Planifie l'exécution mensuelle du script
  ansible.builtin.cron:
    backup: true
    name: "Sauvegarde Geotribu - Site et CDN"
    job: "{{ dir_backup_scripts }}geotribu-backup-site-cdn.sh > {{ dir_backup_scripts }}`date +\\%Y\\%m\\%d\\%H\\%M\\%S`-cron.log 2>&1"
    special_time: monthly
  become_user: geotribu
  become: true
